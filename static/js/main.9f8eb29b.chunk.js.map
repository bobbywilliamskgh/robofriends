{"version":3,"sources":["reportWebVitals.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CardList","robots","Error","SearchBox","searchChange","className","type","placeholder","onChange","Scroll","props","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchField","target","value","fetch","response","json","filteredRobots","filter","robot","name","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCSCQ,EAbE,SAAC,GAAe,EAAbC,OAEZ,MAAM,IAAIC,MAAM,aCWTC,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKC,UAAU,MAAf,SACI,uBACAA,UAAU,mCACVC,KAAK,SACLC,YAAY,gBACZC,SAAUJ,OCEPK,G,MARA,SAACC,GACZ,OACI,qBAAKL,UAAU,YAAf,SACKK,EAAMC,aCiBJC,G,wDArBX,WAAYF,GAAQ,IAAD,8BACf,cAAMA,IACDG,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,4DAEJG,KAAKP,MAAMC,a,GAhBEQ,cCmDbC,E,kDA5CX,aAAe,IAAD,8BACV,gBAQJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAR1C,EAAKZ,MAAQ,CACTZ,OAAQ,GACRsB,YAAa,IAJP,E,qDAad,WAAqB,IAAD,OAEhBG,MAAM,8CACDhC,MAAK,SAAAiC,GAAQ,OAAIA,EAASC,UAC1BlC,MAAK,SAACO,GAAa,EAAKiB,SAAS,CAAEjB,OAAQA,S,oBAIpD,WAAU,IAAD,EAC2BgB,KAAKJ,MAA7BZ,EADH,EACGA,OAAQsB,EADX,EACWA,YAEVM,EAAiB5B,EAAO6B,QAAO,SAACC,GAClC,OAAOA,EAAMC,KAAKC,cAAcC,SAASX,EAAYU,kBAEzD,OAAQhC,EAAOkC,OAGP,sBAAK9B,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWD,aAAca,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUpB,OAAQ4B,WAPlC,gD,GA7BMV,aCDlBiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BjD,M","file":"static/js/main.9f8eb29b.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n    if (true) {\r\n        throw new Error('nooooooo');\r\n    }\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map( user => <Card key={user.id} id={user.id} name={user.name} email={user.email} /> )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    return (\r\n        <div className=\"pa2\">\r\n            <input \r\n            className=\"pa3 ba b--green bg-lightest-blue\" \r\n            type=\"search\" \r\n            placeholder=\"search robots\"\r\n            onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\nimport './Scroll.css';\r\n\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div className=\"container\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({hasError: true});\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Oopppps. This is not good.</h1>\r\n        }\r\n        return this.props.children;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport './App.css';\r\nimport ErrorBoundary from \"../components/ErrorBoundary\";\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchField: \"\",\r\n        }\r\n        // console.log('constructor');\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchField: event.target.value });\r\n    }\r\n\r\n    componentDidMount() {\r\n        // console.log('componentDidMount');\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then((robots) => { this.setState({ robots: robots }) });\r\n\r\n    }\r\n\r\n    render() {\r\n        const { robots, searchField } = this.state;\r\n        // console.log('render');\r\n        const filteredRobots = robots.filter((robot) => {\r\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n        });\r\n        return !robots.length ?\r\n            <h1>Loading...</h1> :\r\n            (\r\n                <div className=\"tc\">\r\n                    <h1 className=\"f1\">Robo Friends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange} />\r\n                    <Scroll>\r\n                        <ErrorBoundary>\r\n                            <CardList robots={filteredRobots} />\r\n                        </ErrorBoundary>\r\n                    </Scroll>\r\n\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\nimport App from './containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}